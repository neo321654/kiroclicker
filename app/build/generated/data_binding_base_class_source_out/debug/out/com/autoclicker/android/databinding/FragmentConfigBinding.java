// Generated by view binder compiler. Do not edit!
package com.autoclicker.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.autoclicker.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConfigBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnLoadConfig;

  @NonNull
  public final Button btnSaveConfig;

  @NonNull
  public final Button btnSelectImage;

  @NonNull
  public final Button btnStartAutoclick;

  @NonNull
  public final Button btnStopAutoclick;

  @NonNull
  public final Button btnTakeScreenshot;

  @NonNull
  public final CheckBox cbInfiniteMode;

  @NonNull
  public final EditText etInterval;

  @NonNull
  public final EditText etRepeatCount;

  @NonNull
  public final ImageView ivTemplatePreview;

  @NonNull
  public final LinearLayout llConfigButtons;

  @NonNull
  public final LinearLayout llControlButtons;

  @NonNull
  public final LinearLayout llImageButtons;

  @NonNull
  public final LinearLayout llRepeatSettings;

  @NonNull
  public final TextView tvClickCounter;

  @NonNull
  public final TextView tvClickCounterLabel;

  @NonNull
  public final TextView tvCoordinatesDisplay;

  @NonNull
  public final TextView tvCoordinatesInfo;

  @NonNull
  public final TextView tvCoordinatesSection;

  @NonNull
  public final TextView tvImageSection;

  @NonNull
  public final TextView tvIntervalLabel;

  @NonNull
  public final TextView tvRepeatLabel;

  @NonNull
  public final TextView tvSettingsSection;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvStatusLabel;

  @NonNull
  public final TextView tvTitle;

  private FragmentConfigBinding(@NonNull ScrollView rootView, @NonNull Button btnLoadConfig,
      @NonNull Button btnSaveConfig, @NonNull Button btnSelectImage,
      @NonNull Button btnStartAutoclick, @NonNull Button btnStopAutoclick,
      @NonNull Button btnTakeScreenshot, @NonNull CheckBox cbInfiniteMode,
      @NonNull EditText etInterval, @NonNull EditText etRepeatCount,
      @NonNull ImageView ivTemplatePreview, @NonNull LinearLayout llConfigButtons,
      @NonNull LinearLayout llControlButtons, @NonNull LinearLayout llImageButtons,
      @NonNull LinearLayout llRepeatSettings, @NonNull TextView tvClickCounter,
      @NonNull TextView tvClickCounterLabel, @NonNull TextView tvCoordinatesDisplay,
      @NonNull TextView tvCoordinatesInfo, @NonNull TextView tvCoordinatesSection,
      @NonNull TextView tvImageSection, @NonNull TextView tvIntervalLabel,
      @NonNull TextView tvRepeatLabel, @NonNull TextView tvSettingsSection,
      @NonNull TextView tvStatus, @NonNull TextView tvStatusLabel, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnLoadConfig = btnLoadConfig;
    this.btnSaveConfig = btnSaveConfig;
    this.btnSelectImage = btnSelectImage;
    this.btnStartAutoclick = btnStartAutoclick;
    this.btnStopAutoclick = btnStopAutoclick;
    this.btnTakeScreenshot = btnTakeScreenshot;
    this.cbInfiniteMode = cbInfiniteMode;
    this.etInterval = etInterval;
    this.etRepeatCount = etRepeatCount;
    this.ivTemplatePreview = ivTemplatePreview;
    this.llConfigButtons = llConfigButtons;
    this.llControlButtons = llControlButtons;
    this.llImageButtons = llImageButtons;
    this.llRepeatSettings = llRepeatSettings;
    this.tvClickCounter = tvClickCounter;
    this.tvClickCounterLabel = tvClickCounterLabel;
    this.tvCoordinatesDisplay = tvCoordinatesDisplay;
    this.tvCoordinatesInfo = tvCoordinatesInfo;
    this.tvCoordinatesSection = tvCoordinatesSection;
    this.tvImageSection = tvImageSection;
    this.tvIntervalLabel = tvIntervalLabel;
    this.tvRepeatLabel = tvRepeatLabel;
    this.tvSettingsSection = tvSettingsSection;
    this.tvStatus = tvStatus;
    this.tvStatusLabel = tvStatusLabel;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_load_config;
      Button btnLoadConfig = ViewBindings.findChildViewById(rootView, id);
      if (btnLoadConfig == null) {
        break missingId;
      }

      id = R.id.btn_save_config;
      Button btnSaveConfig = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveConfig == null) {
        break missingId;
      }

      id = R.id.btn_select_image;
      Button btnSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectImage == null) {
        break missingId;
      }

      id = R.id.btn_start_autoclick;
      Button btnStartAutoclick = ViewBindings.findChildViewById(rootView, id);
      if (btnStartAutoclick == null) {
        break missingId;
      }

      id = R.id.btn_stop_autoclick;
      Button btnStopAutoclick = ViewBindings.findChildViewById(rootView, id);
      if (btnStopAutoclick == null) {
        break missingId;
      }

      id = R.id.btn_take_screenshot;
      Button btnTakeScreenshot = ViewBindings.findChildViewById(rootView, id);
      if (btnTakeScreenshot == null) {
        break missingId;
      }

      id = R.id.cb_infinite_mode;
      CheckBox cbInfiniteMode = ViewBindings.findChildViewById(rootView, id);
      if (cbInfiniteMode == null) {
        break missingId;
      }

      id = R.id.et_interval;
      EditText etInterval = ViewBindings.findChildViewById(rootView, id);
      if (etInterval == null) {
        break missingId;
      }

      id = R.id.et_repeat_count;
      EditText etRepeatCount = ViewBindings.findChildViewById(rootView, id);
      if (etRepeatCount == null) {
        break missingId;
      }

      id = R.id.iv_template_preview;
      ImageView ivTemplatePreview = ViewBindings.findChildViewById(rootView, id);
      if (ivTemplatePreview == null) {
        break missingId;
      }

      id = R.id.ll_config_buttons;
      LinearLayout llConfigButtons = ViewBindings.findChildViewById(rootView, id);
      if (llConfigButtons == null) {
        break missingId;
      }

      id = R.id.ll_control_buttons;
      LinearLayout llControlButtons = ViewBindings.findChildViewById(rootView, id);
      if (llControlButtons == null) {
        break missingId;
      }

      id = R.id.ll_image_buttons;
      LinearLayout llImageButtons = ViewBindings.findChildViewById(rootView, id);
      if (llImageButtons == null) {
        break missingId;
      }

      id = R.id.ll_repeat_settings;
      LinearLayout llRepeatSettings = ViewBindings.findChildViewById(rootView, id);
      if (llRepeatSettings == null) {
        break missingId;
      }

      id = R.id.tv_click_counter;
      TextView tvClickCounter = ViewBindings.findChildViewById(rootView, id);
      if (tvClickCounter == null) {
        break missingId;
      }

      id = R.id.tv_click_counter_label;
      TextView tvClickCounterLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvClickCounterLabel == null) {
        break missingId;
      }

      id = R.id.tv_coordinates_display;
      TextView tvCoordinatesDisplay = ViewBindings.findChildViewById(rootView, id);
      if (tvCoordinatesDisplay == null) {
        break missingId;
      }

      id = R.id.tv_coordinates_info;
      TextView tvCoordinatesInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvCoordinatesInfo == null) {
        break missingId;
      }

      id = R.id.tv_coordinates_section;
      TextView tvCoordinatesSection = ViewBindings.findChildViewById(rootView, id);
      if (tvCoordinatesSection == null) {
        break missingId;
      }

      id = R.id.tv_image_section;
      TextView tvImageSection = ViewBindings.findChildViewById(rootView, id);
      if (tvImageSection == null) {
        break missingId;
      }

      id = R.id.tv_interval_label;
      TextView tvIntervalLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvIntervalLabel == null) {
        break missingId;
      }

      id = R.id.tv_repeat_label;
      TextView tvRepeatLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvRepeatLabel == null) {
        break missingId;
      }

      id = R.id.tv_settings_section;
      TextView tvSettingsSection = ViewBindings.findChildViewById(rootView, id);
      if (tvSettingsSection == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_status_label;
      TextView tvStatusLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusLabel == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentConfigBinding((ScrollView) rootView, btnLoadConfig, btnSaveConfig,
          btnSelectImage, btnStartAutoclick, btnStopAutoclick, btnTakeScreenshot, cbInfiniteMode,
          etInterval, etRepeatCount, ivTemplatePreview, llConfigButtons, llControlButtons,
          llImageButtons, llRepeatSettings, tvClickCounter, tvClickCounterLabel,
          tvCoordinatesDisplay, tvCoordinatesInfo, tvCoordinatesSection, tvImageSection,
          tvIntervalLabel, tvRepeatLabel, tvSettingsSection, tvStatus, tvStatusLabel, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
